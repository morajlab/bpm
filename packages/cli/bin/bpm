#!/usr/bin/env bash

GLOBAL_BASH_MODULES_PATH=$HOME/.bash_modules

# Private functions
__find_bash_modules() {
  local root_path=
  local current_path=$(pwd)
  local is_root=false

  while ! $is_root; do
    if [ $current_path = / ]; then
      echo 1
      exit 1
    fi

    if [ -d "$current_path/bash_modules" ]; then
      root_path="$current_path/bash_modules"
      is_root=true
    fi

    current_path=$(dirname $current_path)
  done

  echo "$root_path"
}

# Public functions
install() {
  local bin_path=$(pwd)/bash_modules/bin
  local packages=()

  shift

  while [ "$#" -gt 0 ]; do
    case "${1^^}" in
      "--GLOBAL" | "-G")
        bin_path=$GLOBAL_BASH_MODULES_PATH/bin

        shift
      ;;
      *)
        packages+=("$1")

        shift
      ;;
    esac
  done

  mkdir -p $bin_path

  for p in "${packages[@]}"; do
    (
     curl -Lfs -o $bin_path/$p \
     https://raw.githubusercontent.com/morajlab/bash-scripts/master/packages/$p/bin/$p || \
     echo ">>> ERROR  :: bash module '$p' doesn't exist."
    )
  done

  chmod u+x $bin_path -R
}
i() {
  install "$@"
}

import() {
  local bash_modules_paths=()
  local local_bash_modules=$(__find_bash_modules)

  if [ "$local_bash_modules" != "1" ]; then
    bash_modules_paths+=("$local_bash_modules")
  fi

  bash_modules_paths+=("$GLOBAL_BASH_MODULES_PATH")

  shift

  for p in "${bash_modules_paths[@]}"; do
    if [ -f "$p/bin/$1" ]; then
      echo "bash $p/bin/$1"
      exit 0
    fi
  done

  echo ">>> ERROR  :: module '$1' is not installed."
  exit 1
}

list() {
  local bash_modules=

  shift

  while [ "$#" -gt 0 ]; do
    case "${1^^}" in
      "--GLOBAL" | "-G")
        bash_modules=$GLOBAL_BASH_MODULES_PATH

        shift
      ;;
      *)
        shift
      ;;
    esac
  done

  if [ -z "$bash_modules" ]; then
    local local_bash_modules=$(__find_bash_modules)

    if [ "$local_bash_modules" != "1" ]; then
      bash_modules=$local_bash_modules
    fi
  fi

  if [ -z "$bash_modules" ] || \
     [ -z "$(ls -A $bash_modules/bin/ 2> /dev/null)" ]; then
    echo ">>> ERROR  :: bash modules are not installed."
    exit 1
  fi

  for p in $(ls -A $bash_modules/bin/); do
    echo "- $p"
  done
}
l() {
  list "$@"
}

if [[ $1 = __* ]] || [ "$(type -t $1)" != 'function' ]; then
  echo ">>> ERROR  :: argument '$1' is invalid."
  exit 1
fi

$1 "$@"
